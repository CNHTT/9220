package com.odd.sportal.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.odd.sportal.model.BetForecastsLiveModel;
import com.odd.sportal.model.BetForecastsModel;
import com.odd.sportal.model.BetForecastsOutRightModel;
import com.odd.sportal.model.EventLiveModel;
import com.odd.sportal.model.EventModel;
import com.odd.sportal.model.GameLiveModel;
import com.odd.sportal.model.GameModel;
import com.odd.sportal.model.NextLiveEventsModel;

import com.odd.sportal.greendao.BetForecastsLiveModelDao;
import com.odd.sportal.greendao.BetForecastsModelDao;
import com.odd.sportal.greendao.BetForecastsOutRightModelDao;
import com.odd.sportal.greendao.EventLiveModelDao;
import com.odd.sportal.greendao.EventModelDao;
import com.odd.sportal.greendao.GameLiveModelDao;
import com.odd.sportal.greendao.GameModelDao;
import com.odd.sportal.greendao.NextLiveEventsModelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig betForecastsLiveModelDaoConfig;
    private final DaoConfig betForecastsModelDaoConfig;
    private final DaoConfig betForecastsOutRightModelDaoConfig;
    private final DaoConfig eventLiveModelDaoConfig;
    private final DaoConfig eventModelDaoConfig;
    private final DaoConfig gameLiveModelDaoConfig;
    private final DaoConfig gameModelDaoConfig;
    private final DaoConfig nextLiveEventsModelDaoConfig;

    private final BetForecastsLiveModelDao betForecastsLiveModelDao;
    private final BetForecastsModelDao betForecastsModelDao;
    private final BetForecastsOutRightModelDao betForecastsOutRightModelDao;
    private final EventLiveModelDao eventLiveModelDao;
    private final EventModelDao eventModelDao;
    private final GameLiveModelDao gameLiveModelDao;
    private final GameModelDao gameModelDao;
    private final NextLiveEventsModelDao nextLiveEventsModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        betForecastsLiveModelDaoConfig = daoConfigMap.get(BetForecastsLiveModelDao.class).clone();
        betForecastsLiveModelDaoConfig.initIdentityScope(type);

        betForecastsModelDaoConfig = daoConfigMap.get(BetForecastsModelDao.class).clone();
        betForecastsModelDaoConfig.initIdentityScope(type);

        betForecastsOutRightModelDaoConfig = daoConfigMap.get(BetForecastsOutRightModelDao.class).clone();
        betForecastsOutRightModelDaoConfig.initIdentityScope(type);

        eventLiveModelDaoConfig = daoConfigMap.get(EventLiveModelDao.class).clone();
        eventLiveModelDaoConfig.initIdentityScope(type);

        eventModelDaoConfig = daoConfigMap.get(EventModelDao.class).clone();
        eventModelDaoConfig.initIdentityScope(type);

        gameLiveModelDaoConfig = daoConfigMap.get(GameLiveModelDao.class).clone();
        gameLiveModelDaoConfig.initIdentityScope(type);

        gameModelDaoConfig = daoConfigMap.get(GameModelDao.class).clone();
        gameModelDaoConfig.initIdentityScope(type);

        nextLiveEventsModelDaoConfig = daoConfigMap.get(NextLiveEventsModelDao.class).clone();
        nextLiveEventsModelDaoConfig.initIdentityScope(type);

        betForecastsLiveModelDao = new BetForecastsLiveModelDao(betForecastsLiveModelDaoConfig, this);
        betForecastsModelDao = new BetForecastsModelDao(betForecastsModelDaoConfig, this);
        betForecastsOutRightModelDao = new BetForecastsOutRightModelDao(betForecastsOutRightModelDaoConfig, this);
        eventLiveModelDao = new EventLiveModelDao(eventLiveModelDaoConfig, this);
        eventModelDao = new EventModelDao(eventModelDaoConfig, this);
        gameLiveModelDao = new GameLiveModelDao(gameLiveModelDaoConfig, this);
        gameModelDao = new GameModelDao(gameModelDaoConfig, this);
        nextLiveEventsModelDao = new NextLiveEventsModelDao(nextLiveEventsModelDaoConfig, this);

        registerDao(BetForecastsLiveModel.class, betForecastsLiveModelDao);
        registerDao(BetForecastsModel.class, betForecastsModelDao);
        registerDao(BetForecastsOutRightModel.class, betForecastsOutRightModelDao);
        registerDao(EventLiveModel.class, eventLiveModelDao);
        registerDao(EventModel.class, eventModelDao);
        registerDao(GameLiveModel.class, gameLiveModelDao);
        registerDao(GameModel.class, gameModelDao);
        registerDao(NextLiveEventsModel.class, nextLiveEventsModelDao);
    }
    
    public void clear() {
        betForecastsLiveModelDaoConfig.clearIdentityScope();
        betForecastsModelDaoConfig.clearIdentityScope();
        betForecastsOutRightModelDaoConfig.clearIdentityScope();
        eventLiveModelDaoConfig.clearIdentityScope();
        eventModelDaoConfig.clearIdentityScope();
        gameLiveModelDaoConfig.clearIdentityScope();
        gameModelDaoConfig.clearIdentityScope();
        nextLiveEventsModelDaoConfig.clearIdentityScope();
    }

    public BetForecastsLiveModelDao getBetForecastsLiveModelDao() {
        return betForecastsLiveModelDao;
    }

    public BetForecastsModelDao getBetForecastsModelDao() {
        return betForecastsModelDao;
    }

    public BetForecastsOutRightModelDao getBetForecastsOutRightModelDao() {
        return betForecastsOutRightModelDao;
    }

    public EventLiveModelDao getEventLiveModelDao() {
        return eventLiveModelDao;
    }

    public EventModelDao getEventModelDao() {
        return eventModelDao;
    }

    public GameLiveModelDao getGameLiveModelDao() {
        return gameLiveModelDao;
    }

    public GameModelDao getGameModelDao() {
        return gameModelDao;
    }

    public NextLiveEventsModelDao getNextLiveEventsModelDao() {
        return nextLiveEventsModelDao;
    }

}
